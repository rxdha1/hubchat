"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ofetch";
exports.ids = ["vendor-chunks/ofetch"];
exports.modules = {

/***/ "(ssr)/./node_modules/ofetch/dist/node.mjs":
/*!*******************************************!*\
  !*** ./node_modules/ofetch/dist/node.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $fetch: () => (/* binding */ $fetch),\n/* harmony export */   AbortController: () => (/* binding */ AbortController),\n/* harmony export */   FetchError: () => (/* reexport safe */ _shared_ofetch_4747642d_mjs__WEBPACK_IMPORTED_MODULE_3__.F),\n/* harmony export */   Headers: () => (/* binding */ Headers),\n/* harmony export */   createFetch: () => (/* reexport safe */ _shared_ofetch_4747642d_mjs__WEBPACK_IMPORTED_MODULE_3__.c),\n/* harmony export */   createFetchError: () => (/* reexport safe */ _shared_ofetch_4747642d_mjs__WEBPACK_IMPORTED_MODULE_3__.a),\n/* harmony export */   createNodeFetch: () => (/* binding */ createNodeFetch),\n/* harmony export */   fetch: () => (/* binding */ fetch),\n/* harmony export */   ofetch: () => (/* binding */ ofetch)\n/* harmony export */ });\n/* harmony import */ var node_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:http */ \"node:http\");\n/* harmony import */ var node_https__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:https */ \"node:https\");\n/* harmony import */ var node_fetch_native__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node-fetch-native */ \"(ssr)/./node_modules/node-fetch-native/dist/index.mjs\");\n/* harmony import */ var _shared_ofetch_4747642d_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shared/ofetch.4747642d.mjs */ \"(ssr)/./node_modules/ofetch/dist/shared/ofetch.4747642d.mjs\");\n/* harmony import */ var destr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! destr */ \"(ssr)/./node_modules/destr/dist/index.mjs\");\n\n\n\n\n\n\n\n\nfunction createNodeFetch() {\n  const useKeepAlive = JSON.parse(process.env.FETCH_KEEP_ALIVE || \"false\");\n  if (!useKeepAlive) {\n    return node_fetch_native__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n  }\n  const agentOptions = { keepAlive: true };\n  const httpAgent = new node_http__WEBPACK_IMPORTED_MODULE_0__.Agent(agentOptions);\n  const httpsAgent = new node_https__WEBPACK_IMPORTED_MODULE_1__.Agent(agentOptions);\n  const nodeFetchOptions = {\n    agent(parsedURL) {\n      return parsedURL.protocol === \"http:\" ? httpAgent : httpsAgent;\n    }\n  };\n  return function nodeFetchWithKeepAlive(input, init) {\n    return (0,node_fetch_native__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(input, { ...nodeFetchOptions, ...init });\n  };\n}\nconst fetch = globalThis.fetch ? (...args) => globalThis.fetch(...args) : createNodeFetch();\nconst Headers = globalThis.Headers || node_fetch_native__WEBPACK_IMPORTED_MODULE_2__.Headers;\nconst AbortController = globalThis.AbortController || node_fetch_native__WEBPACK_IMPORTED_MODULE_2__.AbortController;\nconst ofetch = (0,_shared_ofetch_4747642d_mjs__WEBPACK_IMPORTED_MODULE_3__.c)({ fetch, Headers, AbortController });\nconst $fetch = ofetch;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvb2ZldGNoL2Rpc3Qvbm9kZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNkI7QUFDRTtBQUMyRTtBQUMxQztBQUNzQjtBQUN2RTtBQUNGOztBQUViO0FBQ0E7QUFDQTtBQUNBLFdBQVcseURBQVM7QUFDcEI7QUFDQSx5QkFBeUI7QUFDekIsd0JBQXdCLDRDQUFVO0FBQ2xDLHlCQUF5Qiw2Q0FBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDZEQUFTLFVBQVUsOEJBQThCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxzREFBUztBQUMvQyxzREFBc0QsOERBQWlCO0FBQ3ZFLGVBQWUsOERBQVcsR0FBRyxpQ0FBaUM7QUFDOUQ7O0FBRXlGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdGJvdC8uL25vZGVfbW9kdWxlcy9vZmV0Y2gvZGlzdC9ub2RlLm1qcz8yZWY0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBodHRwIGZyb20gJ25vZGU6aHR0cCc7XG5pbXBvcnQgaHR0cHMgZnJvbSAnbm9kZTpodHRwcyc7XG5pbXBvcnQgbm9kZUZldGNoLCB7IEhlYWRlcnMgYXMgSGVhZGVycyQxLCBBYm9ydENvbnRyb2xsZXIgYXMgQWJvcnRDb250cm9sbGVyJDEgfSBmcm9tICdub2RlLWZldGNoLW5hdGl2ZSc7XG5pbXBvcnQgeyBjIGFzIGNyZWF0ZUZldGNoIH0gZnJvbSAnLi9zaGFyZWQvb2ZldGNoLjQ3NDc2NDJkLm1qcyc7XG5leHBvcnQgeyBGIGFzIEZldGNoRXJyb3IsIGEgYXMgY3JlYXRlRmV0Y2hFcnJvciB9IGZyb20gJy4vc2hhcmVkL29mZXRjaC40NzQ3NjQyZC5tanMnO1xuaW1wb3J0ICdkZXN0cic7XG5pbXBvcnQgJ3Vmbyc7XG5cbmZ1bmN0aW9uIGNyZWF0ZU5vZGVGZXRjaCgpIHtcbiAgY29uc3QgdXNlS2VlcEFsaXZlID0gSlNPTi5wYXJzZShwcm9jZXNzLmVudi5GRVRDSF9LRUVQX0FMSVZFIHx8IFwiZmFsc2VcIik7XG4gIGlmICghdXNlS2VlcEFsaXZlKSB7XG4gICAgcmV0dXJuIG5vZGVGZXRjaDtcbiAgfVxuICBjb25zdCBhZ2VudE9wdGlvbnMgPSB7IGtlZXBBbGl2ZTogdHJ1ZSB9O1xuICBjb25zdCBodHRwQWdlbnQgPSBuZXcgaHR0cC5BZ2VudChhZ2VudE9wdGlvbnMpO1xuICBjb25zdCBodHRwc0FnZW50ID0gbmV3IGh0dHBzLkFnZW50KGFnZW50T3B0aW9ucyk7XG4gIGNvbnN0IG5vZGVGZXRjaE9wdGlvbnMgPSB7XG4gICAgYWdlbnQocGFyc2VkVVJMKSB7XG4gICAgICByZXR1cm4gcGFyc2VkVVJMLnByb3RvY29sID09PSBcImh0dHA6XCIgPyBodHRwQWdlbnQgOiBodHRwc0FnZW50O1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGZ1bmN0aW9uIG5vZGVGZXRjaFdpdGhLZWVwQWxpdmUoaW5wdXQsIGluaXQpIHtcbiAgICByZXR1cm4gbm9kZUZldGNoKGlucHV0LCB7IC4uLm5vZGVGZXRjaE9wdGlvbnMsIC4uLmluaXQgfSk7XG4gIH07XG59XG5jb25zdCBmZXRjaCA9IGdsb2JhbFRoaXMuZmV0Y2ggPyAoLi4uYXJncykgPT4gZ2xvYmFsVGhpcy5mZXRjaCguLi5hcmdzKSA6IGNyZWF0ZU5vZGVGZXRjaCgpO1xuY29uc3QgSGVhZGVycyA9IGdsb2JhbFRoaXMuSGVhZGVycyB8fCBIZWFkZXJzJDE7XG5jb25zdCBBYm9ydENvbnRyb2xsZXIgPSBnbG9iYWxUaGlzLkFib3J0Q29udHJvbGxlciB8fCBBYm9ydENvbnRyb2xsZXIkMTtcbmNvbnN0IG9mZXRjaCA9IGNyZWF0ZUZldGNoKHsgZmV0Y2gsIEhlYWRlcnMsIEFib3J0Q29udHJvbGxlciB9KTtcbmNvbnN0ICRmZXRjaCA9IG9mZXRjaDtcblxuZXhwb3J0IHsgJGZldGNoLCBBYm9ydENvbnRyb2xsZXIsIEhlYWRlcnMsIGNyZWF0ZUZldGNoLCBjcmVhdGVOb2RlRmV0Y2gsIGZldGNoLCBvZmV0Y2ggfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ofetch/dist/node.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/ofetch/dist/shared/ofetch.4747642d.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/ofetch/dist/shared/ofetch.4747642d.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   F: () => (/* binding */ FetchError),\n/* harmony export */   a: () => (/* binding */ createFetchError),\n/* harmony export */   c: () => (/* binding */ createFetch)\n/* harmony export */ });\n/* harmony import */ var destr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! destr */ \"(ssr)/./node_modules/destr/dist/index.mjs\");\n/* harmony import */ var ufo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ufo */ \"(ssr)/./node_modules/ufo/dist/index.mjs\");\n\n\n\nclass FetchError extends Error {\n  constructor(message, opts) {\n    super(message, opts);\n    this.name = \"FetchError\";\n    if (opts?.cause && !this.cause) {\n      this.cause = opts.cause;\n    }\n  }\n}\nfunction createFetchError(ctx) {\n  const errorMessage = ctx.error?.message || ctx.error?.toString() || \"\";\n  const method = ctx.request?.method || ctx.options?.method || \"GET\";\n  const url = ctx.request?.url || String(ctx.request) || \"/\";\n  const requestStr = `[${method}] ${JSON.stringify(url)}`;\n  const statusStr = ctx.response ? `${ctx.response.status} ${ctx.response.statusText}` : \"<no response>\";\n  const message = `${requestStr}: ${statusStr}${errorMessage ? ` ${errorMessage}` : \"\"}`;\n  const fetchError = new FetchError(\n    message,\n    ctx.error ? { cause: ctx.error } : void 0\n  );\n  for (const key of [\"request\", \"options\", \"response\"]) {\n    Object.defineProperty(fetchError, key, {\n      get() {\n        return ctx[key];\n      }\n    });\n  }\n  for (const [key, refKey] of [\n    [\"data\", \"_data\"],\n    [\"status\", \"status\"],\n    [\"statusCode\", \"status\"],\n    [\"statusText\", \"statusText\"],\n    [\"statusMessage\", \"statusText\"]\n  ]) {\n    Object.defineProperty(fetchError, key, {\n      get() {\n        return ctx.response && ctx.response[refKey];\n      }\n    });\n  }\n  return fetchError;\n}\n\nconst payloadMethods = new Set(\n  Object.freeze([\"PATCH\", \"POST\", \"PUT\", \"DELETE\"])\n);\nfunction isPayloadMethod(method = \"GET\") {\n  return payloadMethods.has(method.toUpperCase());\n}\nfunction isJSONSerializable(value) {\n  if (value === void 0) {\n    return false;\n  }\n  const t = typeof value;\n  if (t === \"string\" || t === \"number\" || t === \"boolean\" || t === null) {\n    return true;\n  }\n  if (t !== \"object\") {\n    return false;\n  }\n  if (Array.isArray(value)) {\n    return true;\n  }\n  if (value.buffer) {\n    return false;\n  }\n  return value.constructor && value.constructor.name === \"Object\" || typeof value.toJSON === \"function\";\n}\nconst textTypes = /* @__PURE__ */ new Set([\n  \"image/svg\",\n  \"application/xml\",\n  \"application/xhtml\",\n  \"application/html\"\n]);\nconst JSON_RE = /^application\\/(?:[\\w!#$%&*.^`~-]*\\+)?json(;.+)?$/i;\nfunction detectResponseType(_contentType = \"\") {\n  if (!_contentType) {\n    return \"json\";\n  }\n  const contentType = _contentType.split(\";\").shift() || \"\";\n  if (JSON_RE.test(contentType)) {\n    return \"json\";\n  }\n  if (textTypes.has(contentType) || contentType.startsWith(\"text/\")) {\n    return \"text\";\n  }\n  return \"blob\";\n}\nfunction resolveFetchOptions(request, input, defaults, Headers) {\n  const headers = mergeHeaders(\n    input?.headers ?? request?.headers,\n    defaults?.headers,\n    Headers\n  );\n  let query;\n  if (defaults?.query || defaults?.params || input?.params || input?.query) {\n    query = {\n      ...defaults?.params,\n      ...defaults?.query,\n      ...input?.params,\n      ...input?.query\n    };\n  }\n  return {\n    ...defaults,\n    ...input,\n    query,\n    params: query,\n    headers\n  };\n}\nfunction mergeHeaders(input, defaults, Headers) {\n  if (!defaults) {\n    return new Headers(input);\n  }\n  const headers = new Headers(defaults);\n  if (input) {\n    for (const [key, value] of Symbol.iterator in input || Array.isArray(input) ? input : new Headers(input)) {\n      headers.set(key, value);\n    }\n  }\n  return headers;\n}\nasync function callHooks(context, hooks) {\n  if (hooks) {\n    if (Array.isArray(hooks)) {\n      for (const hook of hooks) {\n        await hook(context);\n      }\n    } else {\n      await hooks(context);\n    }\n  }\n}\n\nconst retryStatusCodes = /* @__PURE__ */ new Set([\n  408,\n  // Request Timeout\n  409,\n  // Conflict\n  425,\n  // Too Early (Experimental)\n  429,\n  // Too Many Requests\n  500,\n  // Internal Server Error\n  502,\n  // Bad Gateway\n  503,\n  // Service Unavailable\n  504\n  // Gateway Timeout\n]);\nconst nullBodyResponses = /* @__PURE__ */ new Set([101, 204, 205, 304]);\nfunction createFetch(globalOptions = {}) {\n  const {\n    fetch = globalThis.fetch,\n    Headers = globalThis.Headers,\n    AbortController = globalThis.AbortController\n  } = globalOptions;\n  async function onError(context) {\n    const isAbort = context.error && context.error.name === \"AbortError\" && !context.options.timeout || false;\n    if (context.options.retry !== false && !isAbort) {\n      let retries;\n      if (typeof context.options.retry === \"number\") {\n        retries = context.options.retry;\n      } else {\n        retries = isPayloadMethod(context.options.method) ? 0 : 1;\n      }\n      const responseCode = context.response && context.response.status || 500;\n      if (retries > 0 && (Array.isArray(context.options.retryStatusCodes) ? context.options.retryStatusCodes.includes(responseCode) : retryStatusCodes.has(responseCode))) {\n        const retryDelay = typeof context.options.retryDelay === \"function\" ? context.options.retryDelay(context) : context.options.retryDelay || 0;\n        if (retryDelay > 0) {\n          await new Promise((resolve) => setTimeout(resolve, retryDelay));\n        }\n        return $fetchRaw(context.request, {\n          ...context.options,\n          retry: retries - 1\n        });\n      }\n    }\n    const error = createFetchError(context);\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(error, $fetchRaw);\n    }\n    throw error;\n  }\n  const $fetchRaw = async function $fetchRaw2(_request, _options = {}) {\n    const context = {\n      request: _request,\n      options: resolveFetchOptions(\n        _request,\n        _options,\n        globalOptions.defaults,\n        Headers\n      ),\n      response: void 0,\n      error: void 0\n    };\n    context.options.method = context.options.method?.toUpperCase();\n    if (context.options.onRequest) {\n      await callHooks(context, context.options.onRequest);\n    }\n    if (typeof context.request === \"string\") {\n      if (context.options.baseURL) {\n        context.request = (0,ufo__WEBPACK_IMPORTED_MODULE_1__.withBase)(context.request, context.options.baseURL);\n      }\n      if (context.options.query) {\n        context.request = (0,ufo__WEBPACK_IMPORTED_MODULE_1__.withQuery)(context.request, context.options.query);\n      }\n    }\n    if (context.options.body && isPayloadMethod(context.options.method)) {\n      if (isJSONSerializable(context.options.body)) {\n        context.options.body = typeof context.options.body === \"string\" ? context.options.body : JSON.stringify(context.options.body);\n        context.options.headers = new Headers(context.options.headers || {});\n        if (!context.options.headers.has(\"content-type\")) {\n          context.options.headers.set(\"content-type\", \"application/json\");\n        }\n        if (!context.options.headers.has(\"accept\")) {\n          context.options.headers.set(\"accept\", \"application/json\");\n        }\n      } else if (\n        // ReadableStream Body\n        \"pipeTo\" in context.options.body && typeof context.options.body.pipeTo === \"function\" || // Node.js Stream Body\n        typeof context.options.body.pipe === \"function\"\n      ) {\n        if (!(\"duplex\" in context.options)) {\n          context.options.duplex = \"half\";\n        }\n      }\n    }\n    let abortTimeout;\n    if (!context.options.signal && context.options.timeout) {\n      const controller = new AbortController();\n      abortTimeout = setTimeout(() => {\n        const error = new Error(\n          \"[TimeoutError]: The operation was aborted due to timeout\"\n        );\n        error.name = \"TimeoutError\";\n        error.code = 23;\n        controller.abort(error);\n      }, context.options.timeout);\n      context.options.signal = controller.signal;\n    }\n    try {\n      context.response = await fetch(\n        context.request,\n        context.options\n      );\n    } catch (error) {\n      context.error = error;\n      if (context.options.onRequestError) {\n        await callHooks(\n          context,\n          context.options.onRequestError\n        );\n      }\n      return await onError(context);\n    } finally {\n      if (abortTimeout) {\n        clearTimeout(abortTimeout);\n      }\n    }\n    const hasBody = context.response.body && !nullBodyResponses.has(context.response.status) && context.options.method !== \"HEAD\";\n    if (hasBody) {\n      const responseType = (context.options.parseResponse ? \"json\" : context.options.responseType) || detectResponseType(context.response.headers.get(\"content-type\") || \"\");\n      switch (responseType) {\n        case \"json\": {\n          const data = await context.response.text();\n          const parseFunction = context.options.parseResponse || destr__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n          context.response._data = parseFunction(data);\n          break;\n        }\n        case \"stream\": {\n          context.response._data = context.response.body;\n          break;\n        }\n        default: {\n          context.response._data = await context.response[responseType]();\n        }\n      }\n    }\n    if (context.options.onResponse) {\n      await callHooks(\n        context,\n        context.options.onResponse\n      );\n    }\n    if (!context.options.ignoreResponseError && context.response.status >= 400 && context.response.status < 600) {\n      if (context.options.onResponseError) {\n        await callHooks(\n          context,\n          context.options.onResponseError\n        );\n      }\n      return await onError(context);\n    }\n    return context.response;\n  };\n  const $fetch = async function $fetch2(request, options) {\n    const r = await $fetchRaw(request, options);\n    return r._data;\n  };\n  $fetch.raw = $fetchRaw;\n  $fetch.native = (...args) => fetch(...args);\n  $fetch.create = (defaultOptions = {}, customGlobalOptions = {}) => createFetch({\n    ...globalOptions,\n    ...customGlobalOptions,\n    defaults: {\n      ...globalOptions.defaults,\n      ...customGlobalOptions.defaults,\n      ...defaultOptions\n    }\n  });\n  return $fetch;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ofetch/dist/shared/ofetch.4747642d.mjs\n");

/***/ })

};
;